{"ast":null,"code":"import React from'react';import{useItemContext}from'./EditedItemContext.jsx';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function ChooseOption(props){const{itemState,updateEditItemState}=useItemContext();let sumAllChanges=0;// Corrected to prevent mutation of the state directly\nfunction changePrice(extraPrice,iWantToAdd){if(!isNaN(extraPrice)){updateEditItemState('newPrice',itemState.newPrice+extraPrice*(iWantToAdd?1:-1));}}return/*#__PURE__*/_jsxs(\"div\",{className:\"vertical_container\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"emphContent\",children:[\" \\u05D1\\u05D7\\u05D9\\u05E8\\u05EA \",itemState.options[props.indexHeadOption].title,\" \"]}),// Mapping over the options array\nitemState.options[props.indexHeadOption].optionCollection.map((option,i)=>{return/*#__PURE__*/_jsx(\"button\",{className:(option.isChecked?\"checked_button\":\"button\")+\" content\",onClick:()=>{// Step 1: Create a copy of the optionsArray to avoid mutation\nconst optionsArray=[...itemState.options[props.indexHeadOption].optionCollection];// Copy array\nconst clickedOption={...optionsArray[i]};// Copy the clicked option\nlet countChecked=0;// Step 2: Handling multiple selection case\nif(clickedOption.isMultiple){for(let j=0;j<optionsArray.length;j++){if(optionsArray[j].isChecked){countChecked++;if(!optionsArray[j].isMultiple){countChecked--;optionsArray[j]={...optionsArray[j],isChecked:false};// Avoid mutating the original\nchangePrice(optionsArray[j].extraPrice,false);}}}if(clickedOption.isChecked&&countChecked>1){clickedOption.isChecked=false;changePrice(clickedOption.extraPrice,false);}else if(!clickedOption.isChecked){clickedOption.isChecked=true;changePrice(clickedOption.extraPrice,true);}}else{// Step 3: Handling single selection case\nif(!clickedOption.isChecked){// Uncheck other options if single selection\nfor(let j=0;j<optionsArray.length;j++){if(optionsArray[j]!==clickedOption&&optionsArray[j].isChecked){optionsArray[j]={...optionsArray[j],isChecked:false};// Copy each item\nif(!isNaN(optionsArray[j].extraPrice))sumAllChanges+=optionsArray[j].extraPrice*-1;}}clickedOption.isChecked=true;if(!isNaN(clickedOption.extraPrice))sumAllChanges+=clickedOption.extraPrice;changePrice(sumAllChanges,true);sumAllChanges=0;}}// Step 4: Update the entire options array immutably\nconst updatedOptionsArray=optionsArray.map((opt,index)=>index===i?clickedOption:opt);// Step 5: Update the state immutably, ensuring re-render\nupdateEditItemState(\"options\",itemState.options.map((opt,index)=>index===props.indexHeadOption?{...opt,optionCollection:updatedOptionsArray}:opt));},children:option.optionTitle},option.optionTitle);})]});}","map":{"version":3,"names":["React","useItemContext","jsxs","_jsxs","jsx","_jsx","ChooseOption","props","itemState","updateEditItemState","sumAllChanges","changePrice","extraPrice","iWantToAdd","isNaN","newPrice","className","children","options","indexHeadOption","title","optionCollection","map","option","i","isChecked","onClick","optionsArray","clickedOption","countChecked","isMultiple","j","length","updatedOptionsArray","opt","index","optionTitle"],"sources":["C:/Users/nisim/Desktop/digital_menu_front_and_back/client/src/components/ChooseOption.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useItemContext } from './EditedItemContext.jsx';\r\n\r\nexport default function ChooseOption(props) {\r\n\r\n    const { itemState, updateEditItemState } = useItemContext();\r\n\r\n    let sumAllChanges = 0;\r\n\r\n    // Corrected to prevent mutation of the state directly\r\n    function changePrice(extraPrice, iWantToAdd) {\r\n        if (!isNaN(extraPrice)) {\r\n            updateEditItemState('newPrice', itemState.newPrice + extraPrice * (iWantToAdd ? 1 : -1));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='vertical_container'>\r\n            <span className='emphContent'> בחירת {itemState.options[props.indexHeadOption].title} </span>\r\n            {\r\n                // Mapping over the options array\r\n                itemState.options[props.indexHeadOption].optionCollection.map((option, i) => {\r\n\r\n                    return (\r\n                        <button\r\n                            className={(option.isChecked ? \"checked_button\" : \"button\") + \" content\"}\r\n                            key={option.optionTitle}\r\n                            onClick={() => {\r\n\r\n                                // Step 1: Create a copy of the optionsArray to avoid mutation\r\n                                const optionsArray = [...itemState.options[props.indexHeadOption].optionCollection]; // Copy array\r\n                                const clickedOption = { ...optionsArray[i] }; // Copy the clicked option\r\n\r\n                                let countChecked = 0;\r\n\r\n                                // Step 2: Handling multiple selection case\r\n                                if (clickedOption.isMultiple) {\r\n                                    for (let j = 0; j < optionsArray.length; j++) {\r\n                                        if (optionsArray[j].isChecked) {\r\n                                            countChecked++;\r\n                                            if (!optionsArray[j].isMultiple) {\r\n                                                countChecked--;\r\n                                                optionsArray[j] = { ...optionsArray[j], isChecked: false }; // Avoid mutating the original\r\n                                                changePrice(optionsArray[j].extraPrice, false);\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    if (clickedOption.isChecked && countChecked > 1) {\r\n                                        clickedOption.isChecked = false;\r\n                                        changePrice(clickedOption.extraPrice, false);\r\n                                    } else if (!clickedOption.isChecked) {\r\n                                        clickedOption.isChecked = true;\r\n                                        changePrice(clickedOption.extraPrice, true);\r\n                                    }\r\n                                } else { // Step 3: Handling single selection case\r\n                                    if (!clickedOption.isChecked) {\r\n                                        // Uncheck other options if single selection\r\n                                        for (let j = 0; j < optionsArray.length; j++) {\r\n                                            if (optionsArray[j] !== clickedOption && optionsArray[j].isChecked) {\r\n                                                optionsArray[j] = { ...optionsArray[j], isChecked: false }; // Copy each item\r\n                                                if (!isNaN(optionsArray[j].extraPrice))\r\n                                                    sumAllChanges += optionsArray[j].extraPrice * -1;\r\n                                            }\r\n                                        }\r\n                                        clickedOption.isChecked = true;\r\n                                        if (!isNaN(clickedOption.extraPrice))\r\n                                            sumAllChanges += clickedOption.extraPrice;\r\n                                        changePrice(sumAllChanges, true);\r\n                                        sumAllChanges = 0;\r\n                                    }\r\n                                }\r\n\r\n                                // Step 4: Update the entire options array immutably\r\n                                const updatedOptionsArray = optionsArray.map((opt, index) =>\r\n                                    index === i ? clickedOption : opt\r\n                                );\r\n\r\n                                // Step 5: Update the state immutably, ensuring re-render\r\n                                updateEditItemState(\"options\",\r\n                                    itemState.options.map((opt, index) =>\r\n                                        index === props.indexHeadOption\r\n                                            ? { ...opt, optionCollection: updatedOptionsArray }\r\n                                            : opt\r\n                                    )\r\n                                );\r\n                            }}>\r\n                            {option.optionTitle}\r\n                        </button>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}